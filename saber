#!/usr/bin/env php
<?php

use Illuminate\Container\Container;
use function Saber\success;
use Silly\Application;
use Symfony\Component\Console\Question\ConfirmationQuestion;

if (file_exists(__DIR__ . '/../../autoload.php')) {
    require __DIR__ . '/../../autoload.php';
} else {
    require __DIR__ . '/vendor/autoload.php';
}

// Start the container
Container::setInstance(new Container);

// Version of App
$version = '1.0.4';

$app = new Application('Saber', $version);

/**
 * Installs Saber
 */
$app->command('install [--php=] [--db=]', function ($php = DEFAULT_PHP_VERSION, $db = DEFAULT_DATABASE_IMAGE) {

    // First, copy the .env.example file
    if (!File::fileExists('.env')) {
        File::copyFile('.env.example', '.env');
    }

    // Get the chosen PHP version
    Config::selectPhpVersion($php);

    // Get the chosen database version
    Config::selectDatabase($db);

    // Pre-installation - moving files to where they need to be
    Config::preInstall();

    // Build the containers
    Docker::buildContainers();
})->descriptions('Installs Saber', [
    '--php' => 'Select the version of PHP you want installed',
    '--db' => 'Select which database you want installed.'
]);

/**
 * Uninstalls Saber
 */
$app->command('uninstall', function ($input, $output) {
    $helper = $this->getHelperSet()->get('question');

    $question = new ConfirmationQuestion('<fg=red;options=bold>Are you sure!? The application will be permenantly deleted [y]</>', false);

    if ($helper->ask($input, $output, $question)) {
        Docker::destroyContainers();
        File::removeSaberStructure(SABER_HOME_CONFIG_PATH);
    }
})->descriptions('Uninstall Saber');

/**
 * Create a new application
 */
$app->command('new domain [-t|--tls]', function ($domain, $tls) {

    // The TLD is added automatically, so no need to write it out yourself
    if (strpos($domain, '.')) {
        throw new Exception('A domain TLD is not required, this will be added automatically.');
    }

    // Add TLD to argument
    $domain = $domain . '.test';

    // If --tls option is enabled, certificates will be generated.
    if ($tls) {
        App::generateCertificate($domain);
    }

    // Generate new app configurations.
    $configFile = ($tls)
        ? SABER_HOME_CONFIG_PATH . '/lemp/nginx/config/conf.d/.default-tls.conf'
        : SABER_HOME_CONFIG_PATH . '/lemp/nginx/config/conf.d/.default-no_tls.conf';

    App::createNginxConfig($domain, $configFile);

    App::createPhpConfig($domain);

    Docker::restartContainers();

    success('Application built and ready to use!');
})->descriptions('Creates a new development application environment', [
    'domain' => 'The name of your app',
    '--tls' => 'Add TLS certificates for your app'
]);

/**
 * Remove an application
 */
$app->command('remove domain', function ($domain) {
    // The TLD is added automatically, so no need to write it out yourself
    if (strpos($domain, '.')) {
        throw new Exception('A domain TLD is not required, this will be added automatically.');
    }

    // Add TLD to argument
    $domain = $domain . '.test';

    // Remove all certificates
    App::removeCertificate($domain);

    // Remove NGINX configs
    App::removeNginxConfig($domain);

    // Remove PHP config
    App::removePhpConfig($domain);

    // Remove the app's code directory
    App::removeSiteCodeDirectory($domain);

    // Restart containers
    Docker::restartContainers();
})->descriptions('Remove a development environment', [
    'domain' => 'The name of the app you want to remove'
]);

$app->run();
